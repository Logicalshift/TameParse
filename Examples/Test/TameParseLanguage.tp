///
/// Tests for the TameParse language definition file
///

// Load in the language definition
import "../../TameParse/Language/definition.tp"

// Test the language
test ParserLanguage {
	<Parser-Language> from 	self			("../../TameParse/Language/definition.tp")
							ansic			("../AnsiC.tp")
							c99				("../C99.tp")
							pascal			("../Pascal.tp")
							test-weakguard	("WeakGuard.tp")
							test-repetition	("Repetition.tp")
	
	<Lexeme-Definition> =	"foo = \"bar\""
							"foo = 'x'"
							"foo = /bar/"
							"foo |= /bar/"
							"replace foo = /bar/"
	
	<Ebnf-Item>	=			"replace"
							"language"
							"'x'"
							"\"string\""
							"<Nonterminal>"

							"(if x then y)"
							"x?"
							"x*"
							"x+"
							"(x | y)"
							"(',' list)*"

							"[=> guard]"
							"[=>[can-clash] clashing guard]"

							"identifier[name]"
							"else[conflict=shift]"
							"else[conflict=reduce]"
							"else[conflict=weak reduce]"
}
